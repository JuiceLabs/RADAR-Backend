plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'idea'
    id 'application'
    id 'com.commercehub.gradle.plugin.avro-base' version '0.8.0'
}

mainClassName = 'org.radarcns.Main'
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

ext.kafkaVersion = '0.10.0.1-cp1'
ext.confluentVersion = '3.0.1'
ext.slf4jVersion = '1.7.21'
ext.log4jVersion = '2.7'
ext.mongodbVersion = '3.3.0'
ext.findbugsVersion = '3.0.1'
ext.boundaryVersion = '1.0.6'
ext.mathVersion = '3.0'

run {
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url 'http://packages.confluent.io/maven/'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile group: 'org.slf4j', name:'slf4j-api', version: slf4jVersion

    // to implement producers and consumers
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: kafkaVersion
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: confluentVersion
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: mongodbVersion
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: findbugsVersion
    compile group: 'com.boundary', name: 'high-scale-lib', version: boundaryVersion
    compile group: 'org.apache.commons', name: 'commons-math3', version: mathVersion
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("build/avro")
}

compileJava.source(generateAvro.outputs)

idea {
    module {
        sourceDirs += file("build/avro")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}
